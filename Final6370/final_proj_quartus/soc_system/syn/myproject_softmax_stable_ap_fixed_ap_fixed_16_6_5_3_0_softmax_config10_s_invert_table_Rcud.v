// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
`timescale 1 ns / 1 ps
module myproject_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config10_s_invert_table_Rcud (
    address0, ce0, q0, 
    reset, clk);

parameter DataWidth = 18;
parameter AddressWidth = 10;
parameter AddressRange = 1024;
 
input[AddressWidth-1:0] address0;
input ce0;
output reg[DataWidth-1:0] q0;

input reset;
input clk;

 
reg [DataWidth-1:0] rom0[0:AddressRange-1];

wire [9:0] ram_address;
wire [17:0] dataout;
wire ram_init_busy;
wire ram_wren;

ram2 u1(
	.clock(clk),
	.dataout(dataout),
	.init(1'b1),
	.init_busy(ram_init_busy),
	.ram_address(ram_address),
	.ram_wren(ram_wren)
);

always @(posedge clk) begin
	rom0[ram_address] = dataout;
end


//(* ram_init_file = "soc_system/syn/myproject_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config10_s_invert_table_Rcud.mif" *) reg [DataWidth-1:0] rom0[AddressRange-1:0];

  
always @(posedge clk) 
begin 
    if (ce0) 
    begin
        q0 <= rom0[address0];
    end
end


endmodule

