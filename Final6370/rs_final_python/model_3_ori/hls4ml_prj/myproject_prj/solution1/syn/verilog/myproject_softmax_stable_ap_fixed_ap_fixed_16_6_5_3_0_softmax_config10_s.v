// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config10_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        data_0_val,
        data_1_val,
        data_2_val,
        data_3_val,
        data_4_val,
        data_5_val,
        data_6_val,
        data_7_val,
        data_8_val,
        data_9_val,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [15:0] data_0_val;
input  [15:0] data_1_val;
input  [15:0] data_2_val;
input  [15:0] data_3_val;
input  [15:0] data_4_val;
input  [15:0] data_5_val;
input  [15:0] data_6_val;
input  [15:0] data_7_val;
input  [15:0] data_8_val;
input  [15:0] data_9_val;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;
output  [15:0] ap_return_5;
output  [15:0] ap_return_6;
output  [15:0] ap_return_7;
output  [15:0] ap_return_8;
output  [15:0] ap_return_9;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
reg    ap_block_pp0_stage0_subdone;
wire   [9:0] exp_table_address0;
reg    exp_table_ce0;
wire   [17:0] exp_table_q0;
wire   [9:0] exp_table_address1;
reg    exp_table_ce1;
wire   [17:0] exp_table_q1;
wire   [9:0] exp_table_address2;
reg    exp_table_ce2;
wire   [17:0] exp_table_q2;
wire   [9:0] exp_table_address3;
reg    exp_table_ce3;
wire   [17:0] exp_table_q3;
wire   [9:0] exp_table_address4;
reg    exp_table_ce4;
wire   [17:0] exp_table_q4;
wire   [9:0] exp_table_address5;
reg    exp_table_ce5;
wire   [17:0] exp_table_q5;
wire   [9:0] exp_table_address6;
reg    exp_table_ce6;
wire   [17:0] exp_table_q6;
wire   [9:0] exp_table_address7;
reg    exp_table_ce7;
wire   [17:0] exp_table_q7;
wire   [9:0] exp_table_address8;
reg    exp_table_ce8;
wire   [17:0] exp_table_q8;
wire   [9:0] exp_table_address9;
reg    exp_table_ce9;
wire   [17:0] exp_table_q9;
wire   [9:0] invert_table_address0;
reg    invert_table_ce0;
wire   [17:0] invert_table_q0;
reg  signed [15:0] data_9_val_read_reg_1491;
wire    ap_block_pp0_stage0_11001;
reg  signed [15:0] data_8_val_read_reg_1498;
reg  signed [15:0] data_7_val_read_reg_1505;
reg  signed [15:0] data_6_val_read_reg_1510;
reg  signed [15:0] data_5_val_read_reg_1515;
reg  signed [15:0] data_4_val_read_reg_1520;
reg  signed [15:0] data_3_val_read_reg_1525;
reg  signed [15:0] data_2_val_read_reg_1530;
reg  signed [15:0] data_1_val_read_reg_1535;
reg  signed [15:0] data_0_val_read_reg_1540;
wire   [15:0] select_ln65_6_fu_392_p3;
reg   [15:0] select_ln65_6_reg_1545;
wire   [9:0] select_ln245_7_fu_979_p3;
reg   [9:0] select_ln245_7_reg_1566;
wire   [9:0] select_ln245_9_fu_1005_p3;
reg   [9:0] select_ln245_9_reg_1571;
wire   [9:0] select_ln245_11_fu_1031_p3;
reg   [9:0] select_ln245_11_reg_1576;
wire   [9:0] select_ln245_13_fu_1057_p3;
reg   [9:0] select_ln245_13_reg_1581;
wire   [9:0] select_ln245_15_fu_1083_p3;
reg   [9:0] select_ln245_15_reg_1586;
wire   [9:0] select_ln245_17_fu_1109_p3;
reg   [9:0] select_ln245_17_reg_1591;
wire   [9:0] select_ln245_19_fu_1135_p3;
reg   [9:0] select_ln245_19_reg_1596;
reg  signed [17:0] exp_res_reg_1601;
reg  signed [17:0] exp_res_reg_1601_pp0_iter3_reg;
reg  signed [17:0] exp_res_1_reg_1607;
reg  signed [17:0] exp_res_1_reg_1607_pp0_iter3_reg;
reg  signed [17:0] exp_res_2_reg_1613;
reg  signed [17:0] exp_res_2_reg_1613_pp0_iter3_reg;
reg  signed [17:0] exp_res_3_reg_1654;
reg  signed [17:0] exp_res_4_reg_1659;
reg  signed [17:0] exp_res_5_reg_1664;
reg  signed [17:0] exp_res_6_reg_1669;
reg  signed [17:0] exp_res_7_reg_1674;
reg  signed [17:0] exp_res_8_reg_1679;
reg  signed [17:0] exp_res_9_reg_1684;
wire   [63:0] zext_ln255_fu_894_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln255_1_fu_925_p1;
wire   [63:0] zext_ln255_2_fu_956_p1;
wire   [63:0] zext_ln255_3_fu_1143_p1;
wire   [63:0] zext_ln255_4_fu_1147_p1;
wire   [63:0] zext_ln255_5_fu_1151_p1;
wire   [63:0] zext_ln255_6_fu_1155_p1;
wire   [63:0] zext_ln255_7_fu_1159_p1;
wire   [63:0] zext_ln255_8_fu_1163_p1;
wire   [63:0] zext_ln255_9_fu_1167_p1;
wire   [63:0] zext_ln265_fu_1232_p1;
wire  signed [15:0] icmp_ln65_fu_260_p0;
wire  signed [15:0] icmp_ln65_fu_260_p1;
wire   [0:0] icmp_ln65_fu_260_p2;
wire   [0:0] xor_ln65_fu_266_p2;
wire  signed [15:0] select_ln65_fu_272_p1;
wire  signed [15:0] select_ln65_fu_272_p2;
wire  signed [15:0] icmp_ln65_1_fu_280_p0;
wire  signed [15:0] icmp_ln65_1_fu_280_p1;
wire   [0:0] icmp_ln65_1_fu_280_p2;
wire   [0:0] xor_ln65_1_fu_286_p2;
wire  signed [15:0] select_ln65_1_fu_292_p1;
wire  signed [15:0] select_ln65_1_fu_292_p2;
wire   [15:0] select_ln65_fu_272_p3;
wire   [15:0] select_ln65_1_fu_292_p3;
wire   [0:0] icmp_ln65_2_fu_300_p2;
wire   [0:0] xor_ln65_2_fu_306_p2;
wire  signed [15:0] icmp_ln65_3_fu_320_p0;
wire  signed [15:0] icmp_ln65_3_fu_320_p1;
wire   [0:0] icmp_ln65_3_fu_320_p2;
wire   [0:0] xor_ln65_3_fu_326_p2;
wire  signed [15:0] select_ln65_3_fu_332_p1;
wire  signed [15:0] select_ln65_3_fu_332_p2;
wire  signed [15:0] icmp_ln65_4_fu_340_p0;
wire  signed [15:0] icmp_ln65_4_fu_340_p1;
wire   [0:0] icmp_ln65_4_fu_340_p2;
wire   [0:0] xor_ln65_4_fu_346_p2;
wire  signed [15:0] select_ln65_4_fu_352_p1;
wire  signed [15:0] select_ln65_4_fu_352_p2;
wire   [15:0] select_ln65_3_fu_332_p3;
wire   [15:0] select_ln65_4_fu_352_p3;
wire   [0:0] icmp_ln65_5_fu_360_p2;
wire   [0:0] xor_ln65_5_fu_366_p2;
wire   [15:0] select_ln65_2_fu_312_p3;
wire   [15:0] select_ln65_5_fu_372_p3;
wire   [0:0] icmp_ln65_6_fu_380_p2;
wire   [0:0] xor_ln65_6_fu_386_p2;
wire   [0:0] icmp_ln65_7_fu_400_p2;
wire   [0:0] xor_ln65_7_fu_404_p2;
wire   [15:0] select_ln65_7_fu_410_p3;
wire   [0:0] icmp_ln65_8_fu_416_p2;
wire   [0:0] xor_ln65_8_fu_421_p2;
wire   [15:0] x_max_fu_427_p3;
wire  signed [16:0] sext_ln245_fu_434_p1;
wire  signed [16:0] sext_ln245_1_fu_437_p1;
wire   [16:0] sub_ln245_fu_441_p2;
wire   [0:0] tmp_10_fu_447_p3;
wire   [0:0] tmp_11_fu_455_p3;
wire   [0:0] xor_ln245_fu_463_p2;
wire  signed [16:0] sext_ln245_2_fu_481_p1;
wire   [16:0] sub_ln245_1_fu_484_p2;
wire   [0:0] tmp_12_fu_490_p3;
wire   [0:0] tmp_13_fu_498_p3;
wire   [0:0] xor_ln245_2_fu_506_p2;
wire  signed [16:0] sext_ln245_3_fu_524_p1;
wire   [16:0] sub_ln245_2_fu_527_p2;
wire   [0:0] tmp_14_fu_533_p3;
wire   [0:0] tmp_15_fu_541_p3;
wire   [0:0] xor_ln245_4_fu_549_p2;
wire  signed [16:0] sext_ln245_4_fu_567_p1;
wire   [16:0] sub_ln245_3_fu_570_p2;
wire   [0:0] tmp_16_fu_576_p3;
wire   [0:0] tmp_17_fu_584_p3;
wire   [0:0] xor_ln245_6_fu_592_p2;
wire  signed [16:0] sext_ln245_5_fu_610_p1;
wire   [16:0] sub_ln245_4_fu_613_p2;
wire   [0:0] tmp_18_fu_619_p3;
wire   [0:0] tmp_19_fu_627_p3;
wire   [0:0] xor_ln245_8_fu_635_p2;
wire  signed [16:0] sext_ln245_6_fu_653_p1;
wire   [16:0] sub_ln245_5_fu_656_p2;
wire   [0:0] tmp_20_fu_662_p3;
wire   [0:0] tmp_21_fu_670_p3;
wire   [0:0] xor_ln245_10_fu_678_p2;
wire  signed [16:0] sext_ln245_7_fu_696_p1;
wire   [16:0] sub_ln245_6_fu_699_p2;
wire   [0:0] tmp_22_fu_705_p3;
wire   [0:0] tmp_23_fu_713_p3;
wire   [0:0] xor_ln245_12_fu_721_p2;
wire  signed [16:0] sext_ln245_8_fu_739_p1;
wire   [16:0] sub_ln245_7_fu_742_p2;
wire   [0:0] tmp_24_fu_748_p3;
wire   [0:0] tmp_25_fu_756_p3;
wire   [0:0] xor_ln245_14_fu_764_p2;
wire  signed [16:0] sext_ln245_9_fu_782_p1;
wire   [16:0] sub_ln245_8_fu_785_p2;
wire   [0:0] tmp_26_fu_791_p3;
wire   [0:0] tmp_27_fu_799_p3;
wire   [0:0] xor_ln245_16_fu_807_p2;
wire  signed [16:0] sext_ln245_10_fu_825_p1;
wire   [16:0] sub_ln245_9_fu_828_p2;
wire   [0:0] tmp_28_fu_834_p3;
wire   [0:0] tmp_29_fu_842_p3;
wire   [0:0] xor_ln245_18_fu_850_p2;
wire   [0:0] and_ln245_fu_469_p2;
wire   [0:0] xor_ln245_1_fu_475_p2;
wire   [9:0] select_ln245_fu_868_p3;
wire   [9:0] tmp_fu_876_p4;
wire   [9:0] select_ln245_1_fu_886_p3;
wire   [0:0] and_ln245_1_fu_512_p2;
wire   [0:0] xor_ln245_3_fu_518_p2;
wire   [9:0] select_ln245_2_fu_899_p3;
wire   [9:0] tmp_1_fu_907_p4;
wire   [9:0] select_ln245_3_fu_917_p3;
wire   [0:0] and_ln245_2_fu_555_p2;
wire   [0:0] xor_ln245_5_fu_561_p2;
wire   [9:0] select_ln245_4_fu_930_p3;
wire   [9:0] tmp_2_fu_938_p4;
wire   [9:0] select_ln245_5_fu_948_p3;
wire   [0:0] and_ln245_3_fu_598_p2;
wire   [0:0] xor_ln245_7_fu_604_p2;
wire   [9:0] select_ln245_6_fu_961_p3;
wire   [9:0] tmp_3_fu_969_p4;
wire   [0:0] and_ln245_4_fu_641_p2;
wire   [0:0] xor_ln245_9_fu_647_p2;
wire   [9:0] select_ln245_8_fu_987_p3;
wire   [9:0] tmp_4_fu_995_p4;
wire   [0:0] and_ln245_5_fu_684_p2;
wire   [0:0] xor_ln245_11_fu_690_p2;
wire   [9:0] select_ln245_10_fu_1013_p3;
wire   [9:0] tmp_5_fu_1021_p4;
wire   [0:0] and_ln245_6_fu_727_p2;
wire   [0:0] xor_ln245_13_fu_733_p2;
wire   [9:0] select_ln245_12_fu_1039_p3;
wire   [9:0] tmp_6_fu_1047_p4;
wire   [0:0] and_ln245_7_fu_770_p2;
wire   [0:0] xor_ln245_15_fu_776_p2;
wire   [9:0] select_ln245_14_fu_1065_p3;
wire   [9:0] tmp_7_fu_1073_p4;
wire   [0:0] and_ln245_8_fu_813_p2;
wire   [0:0] xor_ln245_17_fu_819_p2;
wire   [9:0] select_ln245_16_fu_1091_p3;
wire   [9:0] tmp_8_fu_1099_p4;
wire   [0:0] and_ln245_9_fu_856_p2;
wire   [0:0] xor_ln245_19_fu_862_p2;
wire   [9:0] select_ln245_18_fu_1117_p3;
wire   [9:0] tmp_s_fu_1125_p4;
wire  signed [17:0] add_ln50_fu_1171_p0;
wire  signed [17:0] add_ln50_fu_1171_p1;
wire  signed [17:0] add_ln50_1_fu_1177_p0;
wire  signed [17:0] add_ln50_1_fu_1177_p1;
wire   [17:0] add_ln50_1_fu_1177_p2;
wire  signed [17:0] add_ln50_2_fu_1183_p1;
wire   [17:0] add_ln50_2_fu_1183_p2;
wire   [17:0] add_ln50_fu_1171_p2;
wire  signed [17:0] add_ln50_4_fu_1195_p0;
wire  signed [17:0] add_ln50_4_fu_1195_p1;
wire   [17:0] add_ln50_5_fu_1201_p2;
wire   [17:0] add_ln50_6_fu_1205_p2;
wire   [17:0] add_ln50_4_fu_1195_p2;
wire   [17:0] add_ln50_7_fu_1210_p2;
wire   [17:0] add_ln50_3_fu_1189_p2;
wire   [17:0] exp_sum_fu_1216_p2;
wire   [9:0] tmp_9_fu_1222_p4;
wire  signed [17:0] mul_ln268_fu_1244_p0;
wire  signed [29:0] sext_ln268_fu_1237_p1;
wire   [29:0] mul_ln268_fu_1244_p2;
wire  signed [17:0] mul_ln268_1_fu_1263_p0;
wire   [29:0] mul_ln268_1_fu_1263_p2;
wire  signed [17:0] mul_ln268_2_fu_1282_p0;
wire   [29:0] mul_ln268_2_fu_1282_p2;
wire  signed [17:0] mul_ln268_3_fu_1301_p0;
wire   [29:0] mul_ln268_3_fu_1301_p2;
wire  signed [17:0] mul_ln268_4_fu_1320_p0;
wire   [29:0] mul_ln268_4_fu_1320_p2;
wire  signed [17:0] mul_ln268_5_fu_1339_p0;
wire   [29:0] mul_ln268_5_fu_1339_p2;
wire  signed [17:0] mul_ln268_6_fu_1358_p0;
wire   [29:0] mul_ln268_6_fu_1358_p2;
wire  signed [17:0] mul_ln268_7_fu_1377_p0;
wire   [29:0] mul_ln268_7_fu_1377_p2;
wire  signed [17:0] mul_ln268_8_fu_1396_p0;
wire   [29:0] mul_ln268_8_fu_1396_p2;
wire  signed [17:0] mul_ln268_9_fu_1415_p0;
wire   [29:0] mul_ln268_9_fu_1415_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to3;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

myproject_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config10_s_exp_table_ROM_bkb #(
    .DataWidth( 18 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
exp_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_table_address0),
    .ce0(exp_table_ce0),
    .q0(exp_table_q0),
    .address1(exp_table_address1),
    .ce1(exp_table_ce1),
    .q1(exp_table_q1),
    .address2(exp_table_address2),
    .ce2(exp_table_ce2),
    .q2(exp_table_q2),
    .address3(exp_table_address3),
    .ce3(exp_table_ce3),
    .q3(exp_table_q3),
    .address4(exp_table_address4),
    .ce4(exp_table_ce4),
    .q4(exp_table_q4),
    .address5(exp_table_address5),
    .ce5(exp_table_ce5),
    .q5(exp_table_q5),
    .address6(exp_table_address6),
    .ce6(exp_table_ce6),
    .q6(exp_table_q6),
    .address7(exp_table_address7),
    .ce7(exp_table_ce7),
    .q7(exp_table_q7),
    .address8(exp_table_address8),
    .ce8(exp_table_ce8),
    .q8(exp_table_q8),
    .address9(exp_table_address9),
    .ce9(exp_table_ce9),
    .q9(exp_table_q9)
);

myproject_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config10_s_invert_table_Rcud #(
    .DataWidth( 18 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
invert_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invert_table_address0),
    .ce0(invert_table_ce0),
    .q0(invert_table_q0)
);

myproject_mul_18s_18s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
mul_18s_18s_30_1_1_U95(
    .din0(mul_ln268_fu_1244_p0),
    .din1(exp_res_reg_1601_pp0_iter3_reg),
    .dout(mul_ln268_fu_1244_p2)
);

myproject_mul_18s_18s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
mul_18s_18s_30_1_1_U96(
    .din0(mul_ln268_1_fu_1263_p0),
    .din1(exp_res_1_reg_1607_pp0_iter3_reg),
    .dout(mul_ln268_1_fu_1263_p2)
);

myproject_mul_18s_18s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
mul_18s_18s_30_1_1_U97(
    .din0(mul_ln268_2_fu_1282_p0),
    .din1(exp_res_2_reg_1613_pp0_iter3_reg),
    .dout(mul_ln268_2_fu_1282_p2)
);

myproject_mul_18s_18s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
mul_18s_18s_30_1_1_U98(
    .din0(mul_ln268_3_fu_1301_p0),
    .din1(exp_res_3_reg_1654),
    .dout(mul_ln268_3_fu_1301_p2)
);

myproject_mul_18s_18s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
mul_18s_18s_30_1_1_U99(
    .din0(mul_ln268_4_fu_1320_p0),
    .din1(exp_res_4_reg_1659),
    .dout(mul_ln268_4_fu_1320_p2)
);

myproject_mul_18s_18s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
mul_18s_18s_30_1_1_U100(
    .din0(mul_ln268_5_fu_1339_p0),
    .din1(exp_res_5_reg_1664),
    .dout(mul_ln268_5_fu_1339_p2)
);

myproject_mul_18s_18s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
mul_18s_18s_30_1_1_U101(
    .din0(mul_ln268_6_fu_1358_p0),
    .din1(exp_res_6_reg_1669),
    .dout(mul_ln268_6_fu_1358_p2)
);

myproject_mul_18s_18s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
mul_18s_18s_30_1_1_U102(
    .din0(mul_ln268_7_fu_1377_p0),
    .din1(exp_res_7_reg_1674),
    .dout(mul_ln268_7_fu_1377_p2)
);

myproject_mul_18s_18s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
mul_18s_18s_30_1_1_U103(
    .din0(mul_ln268_8_fu_1396_p0),
    .din1(exp_res_8_reg_1679),
    .dout(mul_ln268_8_fu_1396_p2)
);

myproject_mul_18s_18s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
mul_18s_18s_30_1_1_U104(
    .din0(mul_ln268_9_fu_1415_p0),
    .din1(exp_res_9_reg_1684),
    .dout(mul_ln268_9_fu_1415_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_0_val_read_reg_1540 <= data_0_val;
        data_1_val_read_reg_1535 <= data_1_val;
        data_2_val_read_reg_1530 <= data_2_val;
        data_3_val_read_reg_1525 <= data_3_val;
        data_4_val_read_reg_1520 <= data_4_val;
        data_5_val_read_reg_1515 <= data_5_val;
        data_6_val_read_reg_1510 <= data_6_val;
        data_7_val_read_reg_1505 <= data_7_val;
        data_8_val_read_reg_1498 <= data_8_val;
        data_9_val_read_reg_1491 <= data_9_val;
        select_ln245_11_reg_1576 <= select_ln245_11_fu_1031_p3;
        select_ln245_13_reg_1581 <= select_ln245_13_fu_1057_p3;
        select_ln245_15_reg_1586 <= select_ln245_15_fu_1083_p3;
        select_ln245_17_reg_1591 <= select_ln245_17_fu_1109_p3;
        select_ln245_19_reg_1596 <= select_ln245_19_fu_1135_p3;
        select_ln245_7_reg_1566 <= select_ln245_7_fu_979_p3;
        select_ln245_9_reg_1571 <= select_ln245_9_fu_1005_p3;
        select_ln65_6_reg_1545 <= select_ln65_6_fu_392_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_ce))) begin
        exp_res_1_reg_1607 <= exp_table_q8;
        exp_res_2_reg_1613 <= exp_table_q7;
        exp_res_reg_1601 <= exp_table_q9;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        exp_res_1_reg_1607_pp0_iter3_reg <= exp_res_1_reg_1607;
        exp_res_2_reg_1613_pp0_iter3_reg <= exp_res_2_reg_1613;
        exp_res_reg_1601_pp0_iter3_reg <= exp_res_reg_1601;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_ce))) begin
        exp_res_3_reg_1654 <= exp_table_q6;
        exp_res_4_reg_1659 <= exp_table_q5;
        exp_res_5_reg_1664 <= exp_table_q4;
        exp_res_6_reg_1669 <= exp_table_q3;
        exp_res_7_reg_1674 <= exp_table_q2;
        exp_res_8_reg_1679 <= exp_table_q1;
        exp_res_9_reg_1684 <= exp_table_q0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to3 = 1'b1;
    end else begin
        ap_idle_pp0_0to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to3 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_ce))) begin
        exp_table_ce0 = 1'b1;
    end else begin
        exp_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_ce))) begin
        exp_table_ce1 = 1'b1;
    end else begin
        exp_table_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_ce))) begin
        exp_table_ce2 = 1'b1;
    end else begin
        exp_table_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_ce))) begin
        exp_table_ce3 = 1'b1;
    end else begin
        exp_table_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_ce))) begin
        exp_table_ce4 = 1'b1;
    end else begin
        exp_table_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_ce))) begin
        exp_table_ce5 = 1'b1;
    end else begin
        exp_table_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_ce))) begin
        exp_table_ce6 = 1'b1;
    end else begin
        exp_table_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table_ce7 = 1'b1;
    end else begin
        exp_table_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table_ce8 = 1'b1;
    end else begin
        exp_table_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table_ce9 = 1'b1;
    end else begin
        exp_table_ce9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_ce))) begin
        invert_table_ce0 = 1'b1;
    end else begin
        invert_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln50_1_fu_1177_p0 = exp_table_q3;

assign add_ln50_1_fu_1177_p1 = exp_table_q5;

assign add_ln50_1_fu_1177_p2 = ($signed(add_ln50_1_fu_1177_p0) + $signed(add_ln50_1_fu_1177_p1));

assign add_ln50_2_fu_1183_p1 = exp_table_q2;

assign add_ln50_2_fu_1183_p2 = ($signed(add_ln50_1_fu_1177_p2) + $signed(add_ln50_2_fu_1183_p1));

assign add_ln50_3_fu_1189_p2 = (add_ln50_2_fu_1183_p2 + add_ln50_fu_1171_p2);

assign add_ln50_4_fu_1195_p0 = exp_table_q4;

assign add_ln50_4_fu_1195_p1 = exp_table_q6;

assign add_ln50_4_fu_1195_p2 = ($signed(add_ln50_4_fu_1195_p0) + $signed(add_ln50_4_fu_1195_p1));

assign add_ln50_5_fu_1201_p2 = ($signed(exp_res_reg_1601) + $signed(exp_res_1_reg_1607));

assign add_ln50_6_fu_1205_p2 = ($signed(add_ln50_5_fu_1201_p2) + $signed(exp_res_2_reg_1613));

assign add_ln50_7_fu_1210_p2 = (add_ln50_6_fu_1205_p2 + add_ln50_4_fu_1195_p2);

assign add_ln50_fu_1171_p0 = exp_table_q0;

assign add_ln50_fu_1171_p1 = exp_table_q1;

assign add_ln50_fu_1171_p2 = ($signed(add_ln50_fu_1171_p0) + $signed(add_ln50_fu_1171_p1));

assign and_ln245_1_fu_512_p2 = (xor_ln245_2_fu_506_p2 & tmp_13_fu_498_p3);

assign and_ln245_2_fu_555_p2 = (xor_ln245_4_fu_549_p2 & tmp_15_fu_541_p3);

assign and_ln245_3_fu_598_p2 = (xor_ln245_6_fu_592_p2 & tmp_17_fu_584_p3);

assign and_ln245_4_fu_641_p2 = (xor_ln245_8_fu_635_p2 & tmp_19_fu_627_p3);

assign and_ln245_5_fu_684_p2 = (xor_ln245_10_fu_678_p2 & tmp_21_fu_670_p3);

assign and_ln245_6_fu_727_p2 = (xor_ln245_12_fu_721_p2 & tmp_23_fu_713_p3);

assign and_ln245_7_fu_770_p2 = (xor_ln245_14_fu_764_p2 & tmp_25_fu_756_p3);

assign and_ln245_8_fu_813_p2 = (xor_ln245_16_fu_807_p2 & tmp_27_fu_799_p3);

assign and_ln245_9_fu_856_p2 = (xor_ln245_18_fu_850_p2 & tmp_29_fu_842_p3);

assign and_ln245_fu_469_p2 = (xor_ln245_fu_463_p2 & tmp_11_fu_455_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (1'b0 == ap_ce);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return_0 = {{mul_ln268_fu_1244_p2[29:14]}};

assign ap_return_1 = {{mul_ln268_1_fu_1263_p2[29:14]}};

assign ap_return_2 = {{mul_ln268_2_fu_1282_p2[29:14]}};

assign ap_return_3 = {{mul_ln268_3_fu_1301_p2[29:14]}};

assign ap_return_4 = {{mul_ln268_4_fu_1320_p2[29:14]}};

assign ap_return_5 = {{mul_ln268_5_fu_1339_p2[29:14]}};

assign ap_return_6 = {{mul_ln268_6_fu_1358_p2[29:14]}};

assign ap_return_7 = {{mul_ln268_7_fu_1377_p2[29:14]}};

assign ap_return_8 = {{mul_ln268_8_fu_1396_p2[29:14]}};

assign ap_return_9 = {{mul_ln268_9_fu_1415_p2[29:14]}};

assign exp_sum_fu_1216_p2 = (add_ln50_7_fu_1210_p2 + add_ln50_3_fu_1189_p2);

assign exp_table_address0 = zext_ln255_9_fu_1167_p1;

assign exp_table_address1 = zext_ln255_8_fu_1163_p1;

assign exp_table_address2 = zext_ln255_7_fu_1159_p1;

assign exp_table_address3 = zext_ln255_6_fu_1155_p1;

assign exp_table_address4 = zext_ln255_5_fu_1151_p1;

assign exp_table_address5 = zext_ln255_4_fu_1147_p1;

assign exp_table_address6 = zext_ln255_3_fu_1143_p1;

assign exp_table_address7 = zext_ln255_2_fu_956_p1;

assign exp_table_address8 = zext_ln255_1_fu_925_p1;

assign exp_table_address9 = zext_ln255_fu_894_p1;

assign icmp_ln65_1_fu_280_p0 = data_2_val;

assign icmp_ln65_1_fu_280_p1 = data_3_val;

assign icmp_ln65_1_fu_280_p2 = (($signed(icmp_ln65_1_fu_280_p0) < $signed(icmp_ln65_1_fu_280_p1)) ? 1'b1 : 1'b0);

assign icmp_ln65_2_fu_300_p2 = (($signed(select_ln65_fu_272_p3) < $signed(select_ln65_1_fu_292_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_3_fu_320_p0 = data_4_val;

assign icmp_ln65_3_fu_320_p1 = data_5_val;

assign icmp_ln65_3_fu_320_p2 = (($signed(icmp_ln65_3_fu_320_p0) < $signed(icmp_ln65_3_fu_320_p1)) ? 1'b1 : 1'b0);

assign icmp_ln65_4_fu_340_p0 = data_6_val;

assign icmp_ln65_4_fu_340_p1 = data_7_val;

assign icmp_ln65_4_fu_340_p2 = (($signed(icmp_ln65_4_fu_340_p0) < $signed(icmp_ln65_4_fu_340_p1)) ? 1'b1 : 1'b0);

assign icmp_ln65_5_fu_360_p2 = (($signed(select_ln65_3_fu_332_p3) < $signed(select_ln65_4_fu_352_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_6_fu_380_p2 = (($signed(select_ln65_2_fu_312_p3) < $signed(select_ln65_5_fu_372_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_7_fu_400_p2 = (($signed(data_8_val_read_reg_1498) < $signed(data_9_val_read_reg_1491)) ? 1'b1 : 1'b0);

assign icmp_ln65_8_fu_416_p2 = (($signed(select_ln65_6_reg_1545) < $signed(select_ln65_7_fu_410_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_260_p0 = data_0_val;

assign icmp_ln65_fu_260_p1 = data_1_val;

assign icmp_ln65_fu_260_p2 = (($signed(icmp_ln65_fu_260_p0) < $signed(icmp_ln65_fu_260_p1)) ? 1'b1 : 1'b0);

assign invert_table_address0 = zext_ln265_fu_1232_p1;

assign mul_ln268_1_fu_1263_p0 = sext_ln268_fu_1237_p1;

assign mul_ln268_2_fu_1282_p0 = sext_ln268_fu_1237_p1;

assign mul_ln268_3_fu_1301_p0 = sext_ln268_fu_1237_p1;

assign mul_ln268_4_fu_1320_p0 = sext_ln268_fu_1237_p1;

assign mul_ln268_5_fu_1339_p0 = sext_ln268_fu_1237_p1;

assign mul_ln268_6_fu_1358_p0 = sext_ln268_fu_1237_p1;

assign mul_ln268_7_fu_1377_p0 = sext_ln268_fu_1237_p1;

assign mul_ln268_8_fu_1396_p0 = sext_ln268_fu_1237_p1;

assign mul_ln268_9_fu_1415_p0 = sext_ln268_fu_1237_p1;

assign mul_ln268_fu_1244_p0 = sext_ln268_fu_1237_p1;

assign select_ln245_10_fu_1013_p3 = ((and_ln245_5_fu_684_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln245_11_fu_1031_p3 = ((xor_ln245_11_fu_690_p2[0:0] == 1'b1) ? select_ln245_10_fu_1013_p3 : tmp_5_fu_1021_p4);

assign select_ln245_12_fu_1039_p3 = ((and_ln245_6_fu_727_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln245_13_fu_1057_p3 = ((xor_ln245_13_fu_733_p2[0:0] == 1'b1) ? select_ln245_12_fu_1039_p3 : tmp_6_fu_1047_p4);

assign select_ln245_14_fu_1065_p3 = ((and_ln245_7_fu_770_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln245_15_fu_1083_p3 = ((xor_ln245_15_fu_776_p2[0:0] == 1'b1) ? select_ln245_14_fu_1065_p3 : tmp_7_fu_1073_p4);

assign select_ln245_16_fu_1091_p3 = ((and_ln245_8_fu_813_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln245_17_fu_1109_p3 = ((xor_ln245_17_fu_819_p2[0:0] == 1'b1) ? select_ln245_16_fu_1091_p3 : tmp_8_fu_1099_p4);

assign select_ln245_18_fu_1117_p3 = ((and_ln245_9_fu_856_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln245_19_fu_1135_p3 = ((xor_ln245_19_fu_862_p2[0:0] == 1'b1) ? select_ln245_18_fu_1117_p3 : tmp_s_fu_1125_p4);

assign select_ln245_1_fu_886_p3 = ((xor_ln245_1_fu_475_p2[0:0] == 1'b1) ? select_ln245_fu_868_p3 : tmp_fu_876_p4);

assign select_ln245_2_fu_899_p3 = ((and_ln245_1_fu_512_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln245_3_fu_917_p3 = ((xor_ln245_3_fu_518_p2[0:0] == 1'b1) ? select_ln245_2_fu_899_p3 : tmp_1_fu_907_p4);

assign select_ln245_4_fu_930_p3 = ((and_ln245_2_fu_555_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln245_5_fu_948_p3 = ((xor_ln245_5_fu_561_p2[0:0] == 1'b1) ? select_ln245_4_fu_930_p3 : tmp_2_fu_938_p4);

assign select_ln245_6_fu_961_p3 = ((and_ln245_3_fu_598_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln245_7_fu_979_p3 = ((xor_ln245_7_fu_604_p2[0:0] == 1'b1) ? select_ln245_6_fu_961_p3 : tmp_3_fu_969_p4);

assign select_ln245_8_fu_987_p3 = ((and_ln245_4_fu_641_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln245_9_fu_1005_p3 = ((xor_ln245_9_fu_647_p2[0:0] == 1'b1) ? select_ln245_8_fu_987_p3 : tmp_4_fu_995_p4);

assign select_ln245_fu_868_p3 = ((and_ln245_fu_469_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln65_1_fu_292_p1 = data_2_val;

assign select_ln65_1_fu_292_p2 = data_3_val;

assign select_ln65_1_fu_292_p3 = ((xor_ln65_1_fu_286_p2[0:0] == 1'b1) ? select_ln65_1_fu_292_p1 : select_ln65_1_fu_292_p2);

assign select_ln65_2_fu_312_p3 = ((xor_ln65_2_fu_306_p2[0:0] == 1'b1) ? select_ln65_fu_272_p3 : select_ln65_1_fu_292_p3);

assign select_ln65_3_fu_332_p1 = data_4_val;

assign select_ln65_3_fu_332_p2 = data_5_val;

assign select_ln65_3_fu_332_p3 = ((xor_ln65_3_fu_326_p2[0:0] == 1'b1) ? select_ln65_3_fu_332_p1 : select_ln65_3_fu_332_p2);

assign select_ln65_4_fu_352_p1 = data_6_val;

assign select_ln65_4_fu_352_p2 = data_7_val;

assign select_ln65_4_fu_352_p3 = ((xor_ln65_4_fu_346_p2[0:0] == 1'b1) ? select_ln65_4_fu_352_p1 : select_ln65_4_fu_352_p2);

assign select_ln65_5_fu_372_p3 = ((xor_ln65_5_fu_366_p2[0:0] == 1'b1) ? select_ln65_3_fu_332_p3 : select_ln65_4_fu_352_p3);

assign select_ln65_6_fu_392_p3 = ((xor_ln65_6_fu_386_p2[0:0] == 1'b1) ? select_ln65_2_fu_312_p3 : select_ln65_5_fu_372_p3);

assign select_ln65_7_fu_410_p3 = ((xor_ln65_7_fu_404_p2[0:0] == 1'b1) ? data_8_val_read_reg_1498 : data_9_val_read_reg_1491);

assign select_ln65_fu_272_p1 = data_0_val;

assign select_ln65_fu_272_p2 = data_1_val;

assign select_ln65_fu_272_p3 = ((xor_ln65_fu_266_p2[0:0] == 1'b1) ? select_ln65_fu_272_p1 : select_ln65_fu_272_p2);

assign sext_ln245_10_fu_825_p1 = data_9_val_read_reg_1491;

assign sext_ln245_1_fu_437_p1 = $signed(x_max_fu_427_p3);

assign sext_ln245_2_fu_481_p1 = data_1_val_read_reg_1535;

assign sext_ln245_3_fu_524_p1 = data_2_val_read_reg_1530;

assign sext_ln245_4_fu_567_p1 = data_3_val_read_reg_1525;

assign sext_ln245_5_fu_610_p1 = data_4_val_read_reg_1520;

assign sext_ln245_6_fu_653_p1 = data_5_val_read_reg_1515;

assign sext_ln245_7_fu_696_p1 = data_6_val_read_reg_1510;

assign sext_ln245_8_fu_739_p1 = data_7_val_read_reg_1505;

assign sext_ln245_9_fu_782_p1 = data_8_val_read_reg_1498;

assign sext_ln245_fu_434_p1 = data_0_val_read_reg_1540;

assign sext_ln268_fu_1237_p1 = $signed(invert_table_q0);

assign sub_ln245_1_fu_484_p2 = ($signed(sext_ln245_2_fu_481_p1) - $signed(sext_ln245_1_fu_437_p1));

assign sub_ln245_2_fu_527_p2 = ($signed(sext_ln245_3_fu_524_p1) - $signed(sext_ln245_1_fu_437_p1));

assign sub_ln245_3_fu_570_p2 = ($signed(sext_ln245_4_fu_567_p1) - $signed(sext_ln245_1_fu_437_p1));

assign sub_ln245_4_fu_613_p2 = ($signed(sext_ln245_5_fu_610_p1) - $signed(sext_ln245_1_fu_437_p1));

assign sub_ln245_5_fu_656_p2 = ($signed(sext_ln245_6_fu_653_p1) - $signed(sext_ln245_1_fu_437_p1));

assign sub_ln245_6_fu_699_p2 = ($signed(sext_ln245_7_fu_696_p1) - $signed(sext_ln245_1_fu_437_p1));

assign sub_ln245_7_fu_742_p2 = ($signed(sext_ln245_8_fu_739_p1) - $signed(sext_ln245_1_fu_437_p1));

assign sub_ln245_8_fu_785_p2 = ($signed(sext_ln245_9_fu_782_p1) - $signed(sext_ln245_1_fu_437_p1));

assign sub_ln245_9_fu_828_p2 = ($signed(sext_ln245_10_fu_825_p1) - $signed(sext_ln245_1_fu_437_p1));

assign sub_ln245_fu_441_p2 = ($signed(sext_ln245_fu_434_p1) - $signed(sext_ln245_1_fu_437_p1));

assign tmp_10_fu_447_p3 = sub_ln245_fu_441_p2[32'd16];

assign tmp_11_fu_455_p3 = sub_ln245_fu_441_p2[32'd15];

assign tmp_12_fu_490_p3 = sub_ln245_1_fu_484_p2[32'd16];

assign tmp_13_fu_498_p3 = sub_ln245_1_fu_484_p2[32'd15];

assign tmp_14_fu_533_p3 = sub_ln245_2_fu_527_p2[32'd16];

assign tmp_15_fu_541_p3 = sub_ln245_2_fu_527_p2[32'd15];

assign tmp_16_fu_576_p3 = sub_ln245_3_fu_570_p2[32'd16];

assign tmp_17_fu_584_p3 = sub_ln245_3_fu_570_p2[32'd15];

assign tmp_18_fu_619_p3 = sub_ln245_4_fu_613_p2[32'd16];

assign tmp_19_fu_627_p3 = sub_ln245_4_fu_613_p2[32'd15];

assign tmp_1_fu_907_p4 = {{sub_ln245_1_fu_484_p2[15:6]}};

assign tmp_20_fu_662_p3 = sub_ln245_5_fu_656_p2[32'd16];

assign tmp_21_fu_670_p3 = sub_ln245_5_fu_656_p2[32'd15];

assign tmp_22_fu_705_p3 = sub_ln245_6_fu_699_p2[32'd16];

assign tmp_23_fu_713_p3 = sub_ln245_6_fu_699_p2[32'd15];

assign tmp_24_fu_748_p3 = sub_ln245_7_fu_742_p2[32'd16];

assign tmp_25_fu_756_p3 = sub_ln245_7_fu_742_p2[32'd15];

assign tmp_26_fu_791_p3 = sub_ln245_8_fu_785_p2[32'd16];

assign tmp_27_fu_799_p3 = sub_ln245_8_fu_785_p2[32'd15];

assign tmp_28_fu_834_p3 = sub_ln245_9_fu_828_p2[32'd16];

assign tmp_29_fu_842_p3 = sub_ln245_9_fu_828_p2[32'd15];

assign tmp_2_fu_938_p4 = {{sub_ln245_2_fu_527_p2[15:6]}};

assign tmp_3_fu_969_p4 = {{sub_ln245_3_fu_570_p2[15:6]}};

assign tmp_4_fu_995_p4 = {{sub_ln245_4_fu_613_p2[15:6]}};

assign tmp_5_fu_1021_p4 = {{sub_ln245_5_fu_656_p2[15:6]}};

assign tmp_6_fu_1047_p4 = {{sub_ln245_6_fu_699_p2[15:6]}};

assign tmp_7_fu_1073_p4 = {{sub_ln245_7_fu_742_p2[15:6]}};

assign tmp_8_fu_1099_p4 = {{sub_ln245_8_fu_785_p2[15:6]}};

assign tmp_9_fu_1222_p4 = {{exp_sum_fu_1216_p2[17:8]}};

assign tmp_fu_876_p4 = {{sub_ln245_fu_441_p2[15:6]}};

assign tmp_s_fu_1125_p4 = {{sub_ln245_9_fu_828_p2[15:6]}};

assign x_max_fu_427_p3 = ((xor_ln65_8_fu_421_p2[0:0] == 1'b1) ? select_ln65_6_reg_1545 : select_ln65_7_fu_410_p3);

assign xor_ln245_10_fu_678_p2 = (tmp_20_fu_662_p3 ^ 1'd1);

assign xor_ln245_11_fu_690_p2 = (tmp_21_fu_670_p3 ^ tmp_20_fu_662_p3);

assign xor_ln245_12_fu_721_p2 = (tmp_22_fu_705_p3 ^ 1'd1);

assign xor_ln245_13_fu_733_p2 = (tmp_23_fu_713_p3 ^ tmp_22_fu_705_p3);

assign xor_ln245_14_fu_764_p2 = (tmp_24_fu_748_p3 ^ 1'd1);

assign xor_ln245_15_fu_776_p2 = (tmp_25_fu_756_p3 ^ tmp_24_fu_748_p3);

assign xor_ln245_16_fu_807_p2 = (tmp_26_fu_791_p3 ^ 1'd1);

assign xor_ln245_17_fu_819_p2 = (tmp_27_fu_799_p3 ^ tmp_26_fu_791_p3);

assign xor_ln245_18_fu_850_p2 = (tmp_28_fu_834_p3 ^ 1'd1);

assign xor_ln245_19_fu_862_p2 = (tmp_29_fu_842_p3 ^ tmp_28_fu_834_p3);

assign xor_ln245_1_fu_475_p2 = (tmp_11_fu_455_p3 ^ tmp_10_fu_447_p3);

assign xor_ln245_2_fu_506_p2 = (tmp_12_fu_490_p3 ^ 1'd1);

assign xor_ln245_3_fu_518_p2 = (tmp_13_fu_498_p3 ^ tmp_12_fu_490_p3);

assign xor_ln245_4_fu_549_p2 = (tmp_14_fu_533_p3 ^ 1'd1);

assign xor_ln245_5_fu_561_p2 = (tmp_15_fu_541_p3 ^ tmp_14_fu_533_p3);

assign xor_ln245_6_fu_592_p2 = (tmp_16_fu_576_p3 ^ 1'd1);

assign xor_ln245_7_fu_604_p2 = (tmp_17_fu_584_p3 ^ tmp_16_fu_576_p3);

assign xor_ln245_8_fu_635_p2 = (tmp_18_fu_619_p3 ^ 1'd1);

assign xor_ln245_9_fu_647_p2 = (tmp_19_fu_627_p3 ^ tmp_18_fu_619_p3);

assign xor_ln245_fu_463_p2 = (tmp_10_fu_447_p3 ^ 1'd1);

assign xor_ln65_1_fu_286_p2 = (icmp_ln65_1_fu_280_p2 ^ 1'd1);

assign xor_ln65_2_fu_306_p2 = (icmp_ln65_2_fu_300_p2 ^ 1'd1);

assign xor_ln65_3_fu_326_p2 = (icmp_ln65_3_fu_320_p2 ^ 1'd1);

assign xor_ln65_4_fu_346_p2 = (icmp_ln65_4_fu_340_p2 ^ 1'd1);

assign xor_ln65_5_fu_366_p2 = (icmp_ln65_5_fu_360_p2 ^ 1'd1);

assign xor_ln65_6_fu_386_p2 = (icmp_ln65_6_fu_380_p2 ^ 1'd1);

assign xor_ln65_7_fu_404_p2 = (icmp_ln65_7_fu_400_p2 ^ 1'd1);

assign xor_ln65_8_fu_421_p2 = (icmp_ln65_8_fu_416_p2 ^ 1'd1);

assign xor_ln65_fu_266_p2 = (icmp_ln65_fu_260_p2 ^ 1'd1);

assign zext_ln255_1_fu_925_p1 = select_ln245_3_fu_917_p3;

assign zext_ln255_2_fu_956_p1 = select_ln245_5_fu_948_p3;

assign zext_ln255_3_fu_1143_p1 = select_ln245_7_reg_1566;

assign zext_ln255_4_fu_1147_p1 = select_ln245_9_reg_1571;

assign zext_ln255_5_fu_1151_p1 = select_ln245_11_reg_1576;

assign zext_ln255_6_fu_1155_p1 = select_ln245_13_reg_1581;

assign zext_ln255_7_fu_1159_p1 = select_ln245_15_reg_1586;

assign zext_ln255_8_fu_1163_p1 = select_ln245_17_reg_1591;

assign zext_ln255_9_fu_1167_p1 = select_ln245_19_reg_1596;

assign zext_ln255_fu_894_p1 = select_ln245_1_fu_886_p3;

assign zext_ln265_fu_1232_p1 = tmp_9_fu_1222_p4;

endmodule //myproject_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config10_s
